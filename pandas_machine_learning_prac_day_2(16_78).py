# -*- coding: utf-8 -*-
"""Pandas Machine Learning prac Day 2(16~78).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uz8Rgn_TazUUvEj2gIblo086iinVmmkn

**Day 2**

Book : 파이썬 머신러닝 판다스 데이터 분석

page : 16 ~ 78

part2.데이터 입출력

1. 외부 파일 읽어오기 - csv, json, excel

2. 웹에서 가져오기 - 표, 웹 스크래핑

3. api - 미 실습(구글 geocoding)

4. 데이터 저장 - csv, json, excel, excel multi sheets
"""

import pandas as pd     #통계 처리용
import numpy as np      #파이썬 기반 수치 해석 라이브러리, 특히 다차원 배열 / 배열 연산 수행(선형대수 연산에 필요)
import matplotlib       #파이썬 기반 2D 시각화 도구(그래프, 차트 등)
import scipy            #과학용 연산에 필요한 패킷 라이브러리(미적분, 선형대수, 행렬, 방정식 계산)
import sklearn          #scikit-learn / 머신러닝 파이썬 라이브러리(회귀분석, 분류, 군집 등 머신러닝 모형 제공)

#p16 / ex. 1-6
df = pd.DataFrame([[15,'Male', '덕영중'], [17, 'Female', '수리중']],
                  index=['준서', '예은'],
                  columns=['나이', '성별', '학교'])

print(df)
print()

df.rename(columns={'나이':'연령', '성별':'남녀', '학교':'소속'}, inplace=True)

df.rename(index={'준서':'학생1', '예은':'학생2'}, inplace=True)

print(df)

#p18 / ex 1-7

exam_data = {'math' : [90, 80, 70], 'Eng':[98,89,95], 'Music':[85,95,100], 'Exer':[100,90,90]}
 
df = pd.DataFrame(exam_data, index=['seo', 'woo', 'in'])
print(df)
print()

df2=df[:]
df2.drop('woo',axis=0, inplace=True)
print(df2)
print()

df3=df[:]
df3.drop(['woo','in'], axis=0, inplace=True)
print(df3)

#p20 / ex1-8

exam_data = {'math' : [90, 80, 70], 'Eng' : [98,89,95],
             'Music':[85,95,100], 'Exer' : [100, 90, 90]}

df = pd.DataFrame(exam_data, index=['seo', 'woo', 'in'])
print(df)
print()

df4 = df.copy()
df4.drop('math', axis=1, inplace=True)
print(df4)
print()

df5=df.copy()
df5.drop(['Eng','Music'], axis=1, inplace=True)
print(df5)

#p21 / ex 1-9
exam_data = {'math' : [90, 80, 70], 'Eng' : [98,89,95],
             'Music':[85,95,100], 'Exer' : [100, 90, 90]}
df = pd.DataFrame(exam_data, index=['seo', 'woo', 'in'])
print(df)
print()

label1 = df.loc['seo']
position1 = df.iloc[0]
print(label1)
print()
print(position1)

label2 = df.loc[['seo', 'woo']]
position2 = df.iloc[[0,1]]
print(label2)
print()
print(position2)
print()

label3 = df.loc['seo':'woo']
position3 = df.iloc[0:1]
print(label3)
print()
print(position3)

#p25 / ex 1-10
exam_data = {'math' : [90, 80, 70], 'Eng' : [98,89,95],
             'Music':[85,95,100], 'Exer' : [100, 90, 90]}
df = pd.DataFrame(exam_data, index=['seo', 'woo', 'in'])
print(df)

print(type(df))
print()

math1 = df['math']
print(math1)
print(type(math1))
print()

english = df.Eng
print(english)
print(type(english))

music_gym = df[['Music', 'Exer']]
print(music_gym)
print(type(music_gym))
print()

math2 = df[['math']]
print(math2)
print(type(math2))

#p28 / ex 1-11
exam_data = {'math' : [90, 80, 70],
             'name' :['seo', 'woo', 'in'],
             'Eng' : [98,89,95],
             'Music':[85,95,100], 'Exer' : [100, 90, 90]}
df = pd.DataFrame(exam_data)
df.set_index('name', inplace=True)
print(df)
print()

a = df.loc['seo', 'Music']
print(a)
b=df.iloc[0,2]
print(b)
print()

c=df.loc['seo', ['Music', 'Exer']]
print(c)
d = df.iloc[0, [2,3]]
print(d)
e = df.loc['seo', 'Music':'Exer']
print(e)
f = df.iloc[0, 2:]
print(f)
print()

g = df.loc[['seo', 'woo'], ['Music','Exer']]
print(g)
h = df.iloc[[0,1], [2,3]]
print(h)
i = df.loc['seo':'woo', 'Music':'Exer']
print(i)
j=df.iloc[0:2, 2:]
print(j)

#p32 / ex 1-12
exam_data = {'name' :['seo', 'woo', 'in'],
             'math' : [90, 80, 70],
             'Eng' : [98,89,95],
             'Music':[85,95,100],
             'Exer' : [100, 90, 90]}
df = pd.DataFrame(exam_data)
print(df)
print()

df['Kor']=80
print(df)

#p 33 / ex 1-13
exam_data = {'name' :['seo', 'woo', 'in'],
             'math' : [90, 80, 70],
             'Eng' : [98,89,95],
             'Music':[85,95,100], 'Exer' : [100, 90, 90]}
df = pd.DataFrame(exam_data)
print(df)
print()

df.loc[3]=0
print(df)
print()

df.loc[4] = ['dong', 90, 80, 70, 60]
print(df)
print()

df.loc['row5'] = df.loc[3]
print(df)

#p 35 / ex 1-14
exam_data = {'name' :['seo', 'woo', 'in'],
             'math' : [90, 80, 70],
             'Eng' : [98,89,95],
             'Music':[85,95,100], 'Exer' : [100, 90, 90]}
df = pd.DataFrame(exam_data)

df.set_index('name', inplace=True)
print(df)
print()

df.iloc[0][3] = 80
print(df)
print()

df.loc['seo']['Exer'] = 90
print(df)
print()

df.loc['seo', 'Exer'] = 100
print(df)

df.loc['seo', ['Music', 'Exer']] = 50
print(df)
print()

df.loc['seo', ['Music', 'Exer']] = 100, 50
print(df)

#p 38 / ex 1-15

exam_data = {'name' :['seo', 'woo', 'in'],
             'math' : [90, 80, 70],
             'Eng' : [98,89,95],
             'Music':[85,95,100], 'Exer' : [100, 90, 90]}
df = pd.DataFrame(exam_data)
print(df)
print()

df=df.transpose()
print(df)
print()

df=df.T
print(df)

exam_data = {'name' :['seo', 'woo', 'in'],
             'math' : [90, 80, 70],
             'Eng' : [98,89,95],
             'Music':[85,95,100], 'Exer' : [100, 90, 90]}
df = pd.DataFrame(exam_data)
print(df)
print()

ndf = df.set_index(['name'])
print(ndf)
print()
ndf2 = ndf.set_index(['Music'])
print(ndf2)
print()
ndf3 = ndf.set_index(['math', 'Music'])
print(ndf3)

#p41 / ex1-17
dict_data = {'c0':[1,2,3], 'c1':[4,5,6], 'c2':[7,8,9], 'c3':[10,11,12], 'c4':[13,14,15]}

df=pd.DataFrame(dict_data, index=['r0','r1','r2'])
print(df)
print()

new_index=['r0','r1','r2','r3','r4']
ndf = df.reindex(new_index)
print(ndf)
print()

new_index=['r0','r1','r2','r3','r4']
ndf2 = df.reindex(new_index, fill_value=0)
print(ndf2)

#p42 / ex 1-18
dict_data = {'c0':[1,2,3], 'c1':[4,5,6], 'c2':[7,8,9], 'c3':[10,11,12], 'c4':[13,14,15]}

df=pd.DataFrame(dict_data, index=['r0','r1','r2'])
print(df)
print()

ndf = df.reset_index()
print(ndf)

ndf2= ndf.reset_index()
print(ndf2)

#p43 / ex 1-19
dict_data = {'c0':[1,2,3], 'c1':[4,5,6], 'c2':[7,8,9], 'c3':[10,11,12], 'c4':[13,14,15]}

df=pd.DataFrame(dict_data, index=['r0','r1','r2'])
print(df)
print()

ndf = df.sort_index(ascending = False)
print(ndf)
print()

ndf2 = df.sort_index(ascending=True)
print(ndf)

#p45 / ex 1-20
dict_data = {'c0':[1,2,3], 'c1':[100,1,10], 'c2':[7,8,9], 'c3':[10,11,12], 'c4':[13,14,15]}

df=pd.DataFrame(dict_data, index=['r0','r1','r2'])
print(df)
print()

ndf = df.sort_values(by = 'c1', ascending = False)
print(ndf)

#p46 / ex 1-21
student1 = pd.Series({'Kor':100, 'Eng':80, 'Math':90})
print(student1)
print()

percentage = student1/100

print(percentage)
print()
print(type(percentage))

#p47 / ex 1-22
student1 = pd.Series({'Kor':100, 'Eng':80, 'Math':90})
student2 = pd.Series({'Math':80, 'Kor':90, 'Eng':80})
print(student1)
print()
print(student2)
print()

addition = student1 + student2
subtraction = student1 - student2
multiplication = student1 * student2
division = student1/student2
print(type(division))
print()

result = pd.DataFrame([addition, subtraction, multiplication, division], index=['sum', 'diff', 'multi', 'div'])
print(result)

#p 49 / ex 1-23
student1 = pd.Series({'Kor':np.nan, 'Eng':80, 'math':90})
student2 = pd.Series({'math':80, 'Kor':90})

print(student1)
print()
print(student2)
print()

addition = student1 + student2
subtraction = student1 - student2
multiplication = student1 * student2
division = student1/student2
print(type(division))
print()

result = pd.DataFrame([addition, subtraction, multiplication, division], index=['sum', 'diff', 'multi', 'div'])
print(result)

#p 51 / ex 1-24

student1 = pd.Series({'Kor':np.nan, 'Eng':80, 'math':90})
student2 = pd.Series({'math':80, 'Kor':90})

print(student1)
print()
print(student2)
print()

sr_add = student1.add(student2, fill_value=0)
sr_sub = student1.sub(student2, fill_value=0)
sr_mul = student1.mul(student2, fill_value=0)
sr_div = student1.div(student2, fill_value=0)

result = pd.DataFrame([sr_add, sr_sub, sr_mul, sr_div], index=['sum', 'diff', 'multi', 'div'])
print(result)

#p53 / ex 1-25
import seaborn as sns

titanic = sns.load_dataset('titanic')
df = titanic.loc[:, ['age','fare']]
print(df.head())
print()
print(type(df))
print()

addition=df+10
print(addition.head())
print()
print(type(addition))

#54 / ex 1-26
titanic = sns.load_dataset('titanic')
df = titanic.loc[:, ['age', 'fare']]
print(df.tail())
print()
print(type(df))
print()

addition = df +10
print(addition.tail())
print()
print(type(addition))
print()

subtraction = addition -df
print(subtraction.tail())
print()
print(type(subtraction))

"""**Part 2. 데이터 입출력**

p.58~
"""

#p 60 / ex 2-1
file_path = './read_csv_sample.csv'

df1 = pd.read_csv(file_path)
print(df1)
print()

df2=pd.read_csv(file_path, header=None)
print(df2)
print()

df3 = pd.read_csv(file_path, index_col=None)
print(df3)
print()

df4 = pd.read_csv(file_path, index_col='c0')
print(df4)

#p63 / ex 2-2

df1 = pd.read_excel('./남북한발전전력량.xlsx', engine = 'openpyxl')
df2 = pd.read_excel('./남북한발전전력량.xlsx', engine = 'openpyxl', header = None)

print(df1)
print()
print(df2)

#p65 / ex2-3
df = pd.read_json('./read_json_sample.json')
print(df)
print()
print(df.index)

#p 67 / ex 2-4
url = './sample.html'
tables = pd.read_html(url)

print(len(tables))
print()

for i in range(len(tables)):
    print('tables[%s]'%i)
    print(tables[i])
    print()

df= tables[1]

df.set_index(['name'], inplace=True)
print(df)

#p 68 / ex 2-5
from bs4 import BeautifulSoup
import requests
import re

url = 'https://en.wikipedia.org/wiki/List_of_American_exchange-traded_funds'
resp=requests.get(url)
soup = BeautifulSoup(resp.text, 'lxml')
rows = soup.select('div > ul > li')

etfs = {}
for row in rows:
    
    try:
        etf_name = re.findall('^(.*) \(NYSE', row.text)
        etf_market = re.findall('\((.*)\|', row.text)
        etf_ticker = re.findall('NYSE Arca\|(.*)\)', row.text)
        
        if (len(etf_ticker) > 0) & (len(etf_market) > 0) & (len(etf_name) > 0):
            etfs[etf_ticker[0]] = [etf_market[0], etf_name[0]]

    except AttributeError as err:
        pass    

print(etfs)
print()

df = pd.DataFrame(etfs)
print(df)

#p74 / ex 2-7

data={'name' : ['Jerry', 'Riah', 'Paul'],
      'algol' : ['A', 'A+', 'B'],
      'basic' : ['C', 'B', 'B+'],
      'C++' : ['B+', 'C', 'C+']}

df = pd.DataFrame(data)
df.set_index('name', inplace=True)
print(df)

df.to_csv('./n_df.sample.csv')

#76 / ex 2-8

data={'name' : ['Jerry', 'Riah', 'Paul'],
      'algol' : ['A', 'A+', 'B'],
      'basic' : ['C', 'B', 'B+'],
      'C++' : ['B+', 'C', 'C+'],}

df = pd.DataFrame(data)
df.set_index('name', inplace=True)
print(df)

df.to_json('./a_df_sample.json')

#p77 / ex 2-9
data={'name' : ['Jerry', 'Riah', 'Paul'],
      'algol' : ['A', 'A+', 'B'],
      'basic' : ['C', 'B', 'B+'],
      'C++' : ['B+', 'C', 'C+'],}

df = pd.DataFrame(data)
df.set_index('name', inplace=True)
print(df)

df.to_excel('./n_df_sample.xlsx')

#p78 / ex 2-10

data1={'name' : ['Jerry', 'Riah', 'Paul'],
      'algol' : ['A', 'A+', 'B'],
      'basic' : ['C', 'B', 'B+'],
      'C++' : ['B+', 'C', 'C+'],}
data2 = {'c0' : [1,2,3],
         'c1' : [4,5,6],
         'c2' : [7,8,9],
         'c3' : [10,11,12],
         'c4' : [13,14,15]}
df1 = pd.DataFrame(data1)
df1.set_index('name', inplace=True)
print(df1)
print()

df2=pd.DataFrame(data2)
df2.set_index('c0', inplace=True)
print(df2)

writer = pd.ExcelWriter('./n_df_excelwriter.xlsx')
df1.to_excel(writer, sheet_name='s1')
df2.to_excel(writer, sheet_name='s2')
writer.save()